### begin nanopore only section ###
# absolute path to minknow directory containing nanopore sequencing data
# minknowDir: /home/redwood/10TB_HDD_internal/users/gordon/nanopore_sequencing/
sequences_dir: /home/redwood/2TB_SSD_internal/minknow/data/
fastq_dir: fastq_pass           # comma separated list of folders within the run folder to pull fastq files from. Normally either 'fastq_pass' or 'fastq_pass, fastq_fail'
# directory within minknow directory that contains fast5 reads
fast5_dir: fast5_pass

colormap: 'bmy_r'
export_SVG: rates

# basecalling
do_basecalling: False                # set to True if basecalling needs to be run and data is provided as .fast5 files, in directories that are named in all run tags. Set to False if data has already been basecalled and is in the sequences folder.
# config file for guppy basecalling
basecalling_guppy_config: 'dna_r10.4_e8.1_sup.cfg'
# quality qscore filter for guppy. 0 means all reads are written to the output
basecalling_guppy_qscore_filter: 8
# command line flags directly passed to guppy
basecalling_guppy_flags: '-x cuda:all'

# medaka
medaka_model: 'r103_sup_variant_g507'      # Model for medaka to use. commonly used: r941_min_high_g360, r941_min_sup_g507, r103_sup_g507
medaka_flags: '--quiet'        # flags to add to medaka smolecule command call. threads, chunk-len, and model flags are already added.

### end nanopore only section ###

nanopore: True      # Set to true if sequencing data is derived from ONT nanopore platform

references_directory: ref   # directory name for reference files, located in working directory

# threads per processing batch, if given enough threads with -j n multiple
# batches run in parallel. Also used as resource for cluster jobs.
# Alignments need to be run with at least -j 2 for alignment and sam to bam conversion.
threads_basecalling: 4
threads_porechop: 4
threads_medaka: 5
threads_alignment: 20
threads_samtools : 1
threads_demux: 4

# paired end read merging
merge_paired_end: False            # set to True if merging of paired end reads is needed, and paired end read filenames are provided for all run tags
NGmerge_flags: '-m 10'             # command line flags to add to NGmerge command. -m X sets the minimum allowable overlap of paired end reads to X. Examine NGmerge documentation for usage if amplicons are shorter than both mates of a paired end read

# NanoPlot
nanoplot: False
nanoplot_flags: '--plots dot'  # command line flags that will be added to all nanoplot function calls. -o and -p are already added

# RCA consensus
minimum_concatemers: 4

# UMI clustering and consensus
UMI_mismatches: 2               # maximum allowable number of mismatches that UMIs can contain and still be grouped together. If set to 2, UMI grouping may consume on the order of 100 gb of memory. Setting to 1 may consume on the order of 1 gb of memory.
UMI_consensus_minimum: 5        # minimum required number of reads with a particular UMI. if set to <=1, all UMI groups will be included
UMI_consensus_maximum: 5        # maximum number of reads that will be used to generate a consensus. UMI groups with more reads than this value 'n' will only use 'n' reads to generate the consensus. 
UMI_medaka_batches: 50                         # number of files to split BAM file into prior to running medaka. Number can be raised if medaka throws an error. Unfortunately necessary workaround for a memory-related error in medaka stitch.                       

# alignment
# alignment flags for samtools
alignment_samtools_flags: ''
# command line flags for minimap2 DNA alignment
alignment_minimap2_flags: '-a -A2 -B4 -O4 -E2 --end-bonus=30 --secondary=no'   # options good for targeted sequencing, minimizes gaps. Use --for-only flag to align to only the forward read of the reference sequence if all reads are already in the correct alignment.


# demultiplexing
demux_screen_no_group: True   # set to True if demuxed sequences that are not assigned a named barcode group should be blocked from subsequent analysis steps
demux_screen_failures: True  # Set to true if sequences that fail barcode detection for any of the barcodes should be blocked from subsequent analysis steps. If demux_screen_no_group is set to True, this option will not change any results
demux_threshold: 0.00          # threshold for carrying through to subsequent rules. To be processed further, a demultiplexed file must contain at least this proportion of the total number of reads in the .fastq file being demultiplexed.

# mutation analysis
mutation_analysis_quality_score_minimum: 5 # Minimum quality score needed for mutation to be counted. For amino acid level analysis, all nucleotides in the codon must be above the threshold for the mutation to be counted
sequence_length_threshold: 0.1              # Proportion of sequence length to be used as threshold for discarding sequences that are of abberant length. Ex. if set to 0.1 and length of trimmed reference sequence is 1000 bp, then all sequences either below 900 or above 1100 bp will not be analyzed
highest_abundance_genotypes: 5                # number of most frequently appearing genotypes to find a representative sequence for and write the alignment (output of clean_alignment method) as a text file. Sequence with the highest average quality score will be chosen.
genotype_ID_alignments: 0
mutations_frequencies_raw: False            # If set to True, outputs mutation frequencies as raw counts, instead of dividing by total sequences
analyze_seqs_with_indels: True      # Set to true if sequences containing frameshift indels should be analyzed

# mutation statistics
unique_genotypes_count_threshold: 5         # minimum number of reads of a particular genotype for that genotype to be included in unique genotypes count

# settings for dms view, which visualizes mutations onto a protein structure. These settings are required if a valid input file for that tool is desired
    # Data for all sample+barcode combinations will be converted to the proper format and output as dms_view_table.csv. See https://dms-view.github.io/ for instructions on how to use the tool
#     # To use, all tags must use the same protein sequence and .pdb file
# dms_view_chain: A    # chain(s) in .pdb file being used. Numbering should coincide with numbering of protein sequence mutation analysis. If more than one, separate with spaces
# dms_view_chain_numbering_difference: 350   # difference in numbering between protein chain in structure and amino acid level analysis. ex. if numbering for AA analysis starts at residue corresponding to residue 10 on the crystal structure, set to 10

# plot_mut_spectrum
#   barcode group name to be used as the background for analyses that require subtraction of sequencing error
#   to use, this barcode group name must be present within all sample tags being analyzed.
#   This is to prevent using a background sequencing error from a different sequencing run than the sample.
#   Comment out if not using
background: 520C-g0
uniques_only: False      # if set to True, only uses unique mutations to determine mutation spectrum

# plot mutation diversity (hamming distance and genotypes plots)
diversity_plot_all: False                                   # set to True if 2D genotypes and hamming distance distribution should be plotted for all sample
hamming_distance_distribution_downsample: False                             # int, if the number of unique genotypes is above this number, then genotypes will be downsampled to this number. This can dramatically speed up hamming distance calculation at the cost of not capturing all sequences. Set to False to use all genotypes
hamming_distance_distribution_raw: False                     # bool, if True, y axis for individual hamming distance plots will show raw counts of sequence pairs instead of proprotion of total sequence pairs
hamming_distance_distribution_plot_x_max: 40                 # maximum x value to show for all HD distribution plots
genotypes2D_plot_downsample: False
genotypes2D_plot_AA: True                                      # if set to true and a protein reference sequence is provided, will use the protein sequence for dimension reduction
genotypes2D_plot_point_size_col: count                         # genotypes column to use for node size. must be numerical
genotypes2D_plot_point_size_range: 30, 60                 # comma separated pair of integers, minimum and maximum point size to be used on the genotypes2D plot. If all values in 'genotypes_plot_point_size_col' are the same, the minimum size will be used 
# genotypes2D_plot_point_color_col: NT_substitutions_count       # genotypes column to use for color of data points. any genotypes column is an option, though some are obviously bad choices. numerical columns will be colored continuously from white to deep blue, categorical columns will be colored as rainbow. default depends on the genotypes.csv file being used. 

# dashboard
dashboard_input: 10k-2                                # tag or timepoints name to use for the dashboard
dashboard_port: 3365                                    # port to use for running the dashboard

# runs to be analyzed, organized into separate run 'tags'. Tags may not contain underscores.
runs:

    DE5:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220805_1747_MN35267_FAT64034_acbb7ded
        reference: LEU2-ura3-mScarlettI.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_firstBatch.csv
        timepoints: timepoints.csv

    DE5-LEU2:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220805_1747_MN35267_FAT64034_acbb7ded
        reference: LEU2.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_firstBatch.csv
        timepoints: timepoints-LEU2.csv

    DE5-mScarlettI:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220805_1747_MN35267_FAT64034_acbb7ded
        reference: mScarlettI.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_firstBatch.csv
        timepoints: timepoints-mScarlettI.csv

    DE5-mScarlettI-flipped:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220805_1747_MN35267_FAT64034_acbb7ded
        reference: mScarlettI-flipped.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_firstBatch.csv
        timepoints: timepoints-mScarlettI-flipped.csv

    DE5-URA3:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220805_1747_MN35267_FAT64034_acbb7ded
        reference: URA3.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_firstBatch.csv
        timepoints: timepoints-URA3.csv

    DE5redo:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220825_1710_MN35267_FAT64034_8a7428d0
        reference: LEU2-ura3-mScarlettI.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_redo.csv

    DE5redo-LEU2:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220825_1710_MN35267_FAT64034_8a7428d0
        reference: LEU2.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_redo.csv

    DE5redo-mScarlettI:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220825_1710_MN35267_FAT64034_8a7428d0
        reference: mScarlettI.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_redo.csv

    DE5redo-mScarlettI-flipped:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220825_1710_MN35267_FAT64034_8a7428d0
        reference: mScarlettI-flipped.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_redo.csv

    DE5redo-URA3:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220825_1710_MN35267_FAT64034_8a7428d0
        reference: URA3.fasta
        UMI_contexts:
            - GNNNYRNNNYRNNNYRNNN
            - cNNNYRNNNYRNNNYRNNN
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 0                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 0
                noSplit: False
        barcodeGroups: barcodeGroups_redo.csv

    TPDNAP:
        # for .fast5 input. list of folder names that hold raw fast5 data in a reads directory ( {storage_data_raw}/{runname}/reads/ ). After basecalling, fastq files from each of these will be combined in a directory for this tag ( sequences/batches/{tag}/{runname}/ ).
        #   If using .fast5 input, must set `do_basecalling` to True, and paired end inputs must be removed
        runname:
            - 20220825_1710_MN35267_FAT64034_8a7428d0
        reference: TPDNAP-ref.fasta
        barcodeInfo:
            fwd:
                context: NNNNNNNA                   # copy and paste from reference fasta sequence. Include just enough sequence on one or both sides to distinguish from other barcodes, more than is necessary will result in more barcodes being ignored due to indels
                fasta: 7merBarcodes.fasta           # fasta file containing barcode sequences, located in references_directory
                reverseComplement: False            # set to True if corresponding barcodes in fasta file are defined as 5' to 3'. Default, False.
                hammingDistance: 1                  # maximum hamming distance from barcode in fasta file to increase leniency in barcode identification. If any two of barcodes within provided fasta file are within this hamming distance from each other, throws an error. Default, 0
                noSplit: False
            rvs:
                context: GNNNNNNN  
                fasta: 7merBarcodes.fasta
                reverseComplement: True
                hammingDistance: 1
                noSplit: False
        barcodeGroups: barcodeGroups_TPDNAP.csv